// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

model Tienda {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  usuario        Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId      String   @unique @db.ObjectId
  nombreTienda   String
  logo           String
  ubicacion      String
  texto1         String
  texto2         String
  numeroContacto String
  email          String
  referencia     String
  urlTienda      String
  codigoQr       Boolean  @default(false)
  codigoBarra    Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Cliente {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId String   @map("usuarioId") @db.ObjectId
  nombres   String
  celular   String
  listas    Lista[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Usuario {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  nombreUsuario   String    @unique
  password        String
  nombres         String
  apellidos       String
  tienda          Tienda?
  clientes        Cliente[] // Relaci√≥n 1:N entre Usuario y Cliente
  defaultCliente  String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Error {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  itemList   Json
}

// usuario   Usuario  @relation(fields: [usuarioId], references: [id])
// usuarioId String   @map("usuarioId") @db.ObjectId
model Lista {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  cliente    Cliente    @relation(fields: [clienteId], references: [id])
  clienteId  String     @map("clienteId") @db.ObjectId
  numero     Int
  items      ItemList[]
  abonos     Json[]
  montoTotal Float      @default(0)
  pagado     Boolean    @default(false)
  completado Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model ItemList {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  lista      Lista    @relation(fields: [listaId], references: [id])
  listaId    String   @db.ObjectId
  nombre     String
  precio     Float
  cantidad   Float
  montoItem  Float
  medida     String
  texto        String
  calculado Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
